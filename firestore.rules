rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function isUser(userId) { return request.auth.uid == userId; }
    function inArray(arr) { return arr != null && arr.size() > 0 && arr.values().hasOnly([request.auth.uid]) == false; }

    // Users doc - restrict reads/writes to owner
    match /users/{userId} {
      allow read, update: if isSignedIn() && isUser(userId);
      allow create: if isSignedIn() && isUser(request.resource.id);

      // Device tokens subcollection
      match /deviceTokens/{token} {
        allow read, create, update, delete: if isSignedIn() && isUser(userId);
      }
    }

    // Chats: sender and receiver can read/write
    match /chats/{messageId} {
      allow read: if isSignedIn() && (resource.data.senderId == request.auth.uid || resource.data.receiverId == request.auth.uid);
      allow create: if isSignedIn() && (request.resource.data.senderId == request.auth.uid || request.resource.data.receiverId == request.auth.uid);
      allow update, delete: if false; // immutable messages
    }

    // Calendars: members in userIds can read/write
    match /calendars/{eventId} {
      allow read: if isSignedIn() && (request.auth.uid in resource.data.userIds);
      allow create: if isSignedIn() && (request.auth.uid in request.resource.data.userIds);
      allow update, delete: if isSignedIn() && (request.auth.uid in resource.data.userIds);
    }

    // Mood logs: owner only
    match /mood_logs/{moodId} {
      allow read, write: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }

    // Goals: shared among userIds
    match /goals/{goalId} {
      allow read: if isSignedIn() && (request.auth.uid in resource.data.userIds);
      allow create: if isSignedIn() && (request.auth.uid in request.resource.data.userIds);
      allow update, delete: if isSignedIn() && (request.auth.uid in resource.data.userIds);
    }

    // Quiz results: owner only
    match /quiz_results/{docId} {
      allow read, write: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }

    // Recommendations: owner can read
    match /recommendations/{recId} {
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow write: if false; // generated by server
    }
  }
}

